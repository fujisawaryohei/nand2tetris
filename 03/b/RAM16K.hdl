// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
        DMux8Way(in=load, sel=address[11..13], a=d1, b=d2, c=d3, d=d4, e=d5, f=d6, g=d7, h=d8);
        RAM512(in=in, load=load, address=address[0..10], out=out1);
        RAM512(in=in, load=load, address=address[0..10], out=out2);
        RAM512(in=in, load=load, address=address[0..10], out=out3);
        RAM512(in=in, load=load, address=address[0..10], out=out4);
        RAM512(in=in, load=load, address=address[0..10], out=out5);
        RAM512(in=in, load=load, address=address[0..10], out=out6);
        RAM512(in=in, load=load, address=address[0..10], out=out7);
        RAM512(in=in, load=load, address=address[0..10], out=out8);
        Mux8Way16(a=out1, b=out2, c=out3, d=out4, e=out5, f=out6, g=out7, h=out8, sel=address[11..13], out=out);
}